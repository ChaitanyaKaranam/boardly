{"version":3,"sources":["images/svg/dashboard.svg","images/barchart.png","images/linechart.png","images/otherschart.png","images/svg/mail.svg","components/Header.js","components/Home.js","components/Boards.js","components/About.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","to","className","Component","Home","onClick","props","history","push","src","dashboard","alt","withRouter","Boards","state","active","chart","this","bar","line","others","renderActiveClass","setState","renderImage","href","target","rel","mail","type","placeholder","App","basename","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dd8cb727.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dashboard.20bb42a2.svg\";","module.exports = __webpack_public_path__ + \"static/media/barchart.de114294.png\";","module.exports = __webpack_public_path__ + \"static/media/linechart.f44c495a.png\";","module.exports = __webpack_public_path__ + \"static/media/otherschart.3466f7f5.png\";","module.exports = __webpack_public_path__ + \"static/media/mail.07d7d9bb.svg\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/Header.scss';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/\">\r\n                            <span>boardl</span>\r\n                            <span className=\"red\">Y</span>\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav__links\">\r\n                        <Link to=\"/boards\">\r\n                            <span>boards</span>\r\n                        </Link>\r\n                        <Link to=\"/about\">\r\n                            <span>about</span>\r\n                        </Link>\r\n                        <Link to=\"/contact\">\r\n                            <span>contact</span>\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../styles/Home.scss';\r\nimport dashboard from '../images/svg/dashboard.svg'\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"home__wrapper\">\r\n                <div className=\"content__wrapper\">\r\n                    <span>We help you create interactvie React</span>\r\n                    <span className=\"red\">dashboards</span>\r\n                    <span className=\"grey sub-heading\">Check our boards</span>\r\n                    <button className=\"primary-button\" onClick={() => {this.props.history.push('/boards')}}>GET STARTED</button>\r\n                </div>\r\n                <div className=\"img__wrapper\">\r\n                    <img src={dashboard} alt=\"create interactive dashboards\"/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Home);","import React, { Component } from 'react';\r\nimport bar from '../images/barchart.png';\r\nimport line from '../images/linechart.png';\r\nimport others from '../images/otherschart.png';\r\nimport '../styles/Boards.scss'\r\n\r\nclass Boards extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            active: 'bar'\r\n        }\r\n    }\r\n    \r\n    renderActiveClass(chart){\r\n        return chart === this.state.active ? 'primary-button' : 'secondary-button'\r\n    }\r\n\r\n    renderImage(){\r\n        if(this.state.active === 'bar'){\r\n            return bar;\r\n        }else if(this.state.active === 'line'){\r\n            return line;\r\n        }else{\r\n            return others\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"board__wrapper\">\r\n                <div className=\"board__charts\">\r\n                    <button className={this.renderActiveClass('bar')} onClick={() => {\r\n                        this.setState({ active: 'bar'})\r\n                    }}>\r\n                        BAR CHART\r\n                    </button>\r\n                    <button className={this.renderActiveClass('line')} onClick={() => {\r\n                        this.setState( { active: 'line'})\r\n                    }}>\r\n                        LINE CHART\r\n                    </button>\r\n                    <button className={this.renderActiveClass('others')} onClick={() => {\r\n                        this.setState({ active: 'others'})\r\n                    }}>\r\n                        OTHERS\r\n                    </button>\r\n                </div>\r\n                <div className=\"board__images\">\r\n                    <img src={this.renderImage()} alt=\"chart\"/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Boards;","import React from 'react';\r\nimport '../styles/About.scss';\r\n\r\nexport default () => {\r\n    return(\r\n        <div className=\"about__wrapper\">\r\n            <div className=\"about__content\">\r\n                <span>Open source React dashboard framework built on top of <span className=\"red\">Chart.js</span></span>\r\n                <span className=\"grey sub-heading\">Interested in contributing? Check out our GitHub page</span>\r\n                <a href=\"https://github.com/ChaitanyaKaranam/boardly\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <button className=\"primary-button\">START CONTRIBUTING</button>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport '../styles/Contact.scss';\r\nimport mail from '../images/svg/mail.svg'\r\n\r\nexport default () => {\r\n    return(\r\n        <div className=\"contact__wrapper\">\r\n            <div className=\"image__wrapper\">\r\n                <img src={mail} alt=\"contact us\"/>\r\n            </div>\r\n            <div className=\"contact__content\">\r\n                <span>Mail us at <span className=\"red\">contact@boardly.com</span></span>\r\n                <span className=\"grey sub-heading\">Subscribe to our Newsletter</span>\r\n                <input type=\"email\" placeholder=\"Enter Email Address\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Boards from './components/Boards';\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './styles/App.scss';\nimport './styles/Components.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename=\"/boardly\">\n      <header className=\"App-header\">\n          <Header/>\n      </header>\n      <main>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home/>\n            </Route>\n            <Route exact path=\"/boards\">\n              <Boards/>\n            </Route>\n            <Route exact path=\"/about\">\n              <About/>\n            </Route>\n            <Route exact path=\"/contact\">\n              <Contact/>\n            </Route>\n          </Switch>\n      </main>\n      </Router>        \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}